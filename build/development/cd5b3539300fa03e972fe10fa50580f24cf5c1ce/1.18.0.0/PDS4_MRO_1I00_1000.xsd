<?xml version="1.0" encoding="UTF-8"?>
  <!-- PDS4 XML/Schema for Name Space Id:mro  Version:1.0.0.0 - Wed Oct 05 14:44:06 UTC 2022 -->
  <!-- Generated from the PDS4 Information Model Version 1.18.0.0 - System Build 12.1 -->
  <!-- *** This PDS4 product schema is an operational deliverable. *** -->
  <!--                                                                           -->
  <!--               Dictionary Stack                                            -->
  <!-- 1.18.0.0 - pds: - Common Dictionary                                       -->
  <!-- 1.0.0.0 - mro: - MRO                                                      -->
  <!--                                                                           -->
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://pds.nasa.gov/pds4/mission/mro/v1"
    xmlns:mro="http://pds.nasa.gov/pds4/mission/mro/v1"
    xmlns:pds="http://pds.nasa.gov/pds4/pds/v1"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    version="1.0.0.0">
 
    <xs:import namespace="http://pds.nasa.gov/pds4/pds/v1" schemaLocation="https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1I00.xsd"/>
 
  <xs:annotation>
    <xs:documentation>

        The MRO dictionary contains classes that describe aspects of the 
        Mars Reconnaissance Orbiter mission and related instruments.
        
        MRO version 1.0.0.0
        PDS Build 1.18.0.0 (1I00)
        LDDTool version 14.0.13
        
        Built with lddtool -plJ PDS4_MRO_IngestLDD.xml
        
        2022-09-27 JGW. Revised SCLK pattern to allow between 3 and 6 fractional digits.
        Added release_id.
        
        2022-09-29 JGW. Added SHARAD_Parameters class.
        Reorganized attribute definitions.
    
    </xs:documentation>
  </xs:annotation>
 
  <xs:element name="MRO_Parameters" type="mro:MRO_Parameters"> </xs:element>

  <xs:complexType name="Array_Sampled">
    <xs:annotation>
      <xs:documentation> The Array_Sampled class class provides
        parameters for a uniformly sampled array. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="mro:name" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="array_interval" type="mro:array_interval" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="array_unit" type="mro:array_unit" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="array_first_value" type="mro:array_first_value" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="array_last_value" type="mro:array_last_value" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="array_scale" type="mro:array_scale" minOccurs="1" maxOccurs="1"> </xs:element>
    </xs:sequence>
    <!-- Begin assert statements for schematron - Enumerated Values -->
    <!-- <xs:assert test="mro:array_scale = ('Exponential', 'Linear', 'Logarithmic')"/> -->
    <!-- End assert statements for schematron - Enumerated Values -->
  </xs:complexType>

  <xs:complexType name="CRISM_Band">
    <xs:annotation>
      <xs:documentation>The CRISM_Band class contains parameters
        describing a single band in CRISM Browse Product 3D image array
        or in the CRISM data cube containing refined spectral summary
        parameters. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="band_name" type="mro:band_name" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="band_sequence_number" type="mro:band_sequence_number" minOccurs="1" maxOccurs="1"> </xs:element>
      <xs:element name="scaling_factor" type="mro:scaling_factor" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="value_offset" type="mro:value_offset" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CRISM_Parameters">
    <xs:annotation>
      <xs:documentation>The CRISM_Parameters class is the container for
        CRISM-specific observation parameters.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="observation_type" type="mro:observation_type" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="observation_id" type="mro:observation_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="observation_number" type="mro:observation_number" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="activity_id" type="mro:activity_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="sensor_id" type="mro:sensor_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="CRISM_Temperatures" type="mro:CRISM_Temperatures" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="CRISM_Band" type="mro:CRISM_Band" minOccurs="0" maxOccurs="unbounded"> </xs:element>
    </xs:sequence>
    <!-- Begin assert statements for schematron - Enumerated Values -->
    <!-- <xs:assert test="mro:observation_type = ('ATO', 'ATU', 'CAL', 'EPF', 'FFC', 'FRS', 'FRT', 'FUN', 'HRL', 'HRS', 'HSP', 'HSV', 'ICL', 'LMB', 'MSP', 'MSV', 'MSW', 'STO', 'TOD', 'UNK')"/> -->
    <!-- End assert statements for schematron - Enumerated Values -->
  </xs:complexType>

  <xs:complexType name="CRISM_Temperatures">
    <xs:annotation>
      <xs:documentation>The CRISM_Temperatures class is the container
        for CRISM-specific temperature-related
        parameters.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="detector_temperature" type="mro:detector_temperature" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="optical_bench_temperature" type="mro:optical_bench_temperature" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="spectrometer_housing_temperature" type="mro:spectrometer_housing_temperature" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="sphere_temperature" type="mro:sphere_temperature" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="fpe_temperature" type="mro:fpe_temperature" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MRO_Parameters">
    <xs:annotation>
      <xs:documentation>The MRO_Parameters class is the container for
        mission-specific metadata elements.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="product_type" type="mro:product_type" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="product_version_id" type="mro:product_version_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="release_id" type="mro:release_id" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="orbit_number" type="mro:orbit_number" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="mission_phase_name" type="mro:mission_phase_name" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="spacecraft_clock_count_partition" type="mro:spacecraft_clock_count_partition" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="spacecraft_clock_start_count" type="mro:spacecraft_clock_start_count" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="spacecraft_clock_stop_count" type="mro:spacecraft_clock_stop_count" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="producer_institution_name" type="mro:producer_institution_name" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="CRISM_Parameters" type="mro:CRISM_Parameters" minOccurs="0" maxOccurs="1"> </xs:element>
      <xs:element name="SHARAD_Parameters" type="mro:SHARAD_Parameters" minOccurs="0" maxOccurs="1"> </xs:element>
    </xs:sequence>
    <!-- Begin assert statements for schematron - Enumerated Values -->
    <!-- <xs:assert test="mro:product_type = ('CDR', 'DDR', 'EDR', 'LDR', 'MRDR', 'MTRDR', 'MTRDR_Browse', 'MTRDR_Extras', 'RDR', 'TER', 'TER_Browse', 'TER_Extras', 'TRDR', 'TRDR_Browse', 'TRDR_Extras')"/> -->
    <!-- <xs:assert test="mro:mission_phase_name = ('Aerobraking', 'Approach and Orbit Insertion', 'Cruise', 'Extended Mission 1', 'Extended Mission 2', 'Extended Mission 3', 'Extended Mission 4', 'Extended Mission 5', 'Extended Mission 6', 'Extended Science', 'Launch', 'Primary Science')"/> -->
    <!-- End assert statements for schematron - Enumerated Values -->
  </xs:complexType>

  <xs:complexType name="SHARAD_Parameters">
    <xs:annotation>
      <xs:documentation>The SHARAD_Parameters class contains attributes
        specific to SHARAD data.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Array_Sampled" type="mro:Array_Sampled" minOccurs="0" maxOccurs="unbounded"> </xs:element>
    </xs:sequence>
  </xs:complexType>

    <xs:annotation>
      <xs:documentation>This section contains the simpleTypes that provide more constraints
        than those at the base data type level. The simpleTypes defined here build on the base data
        types. This is another component of the common dictionary and therefore falls within the
        common namespace.
      </xs:documentation>
    </xs:annotation>

  <xs:simpleType name="activity_id">
    <xs:annotation>
      <xs:documentation> The activity_id attribute describes the type of
        measurement contained in a CRISM EDR or other data product, and
        provides indication of how the observation is commanded. The
        format of the value is AC### where AC is a 2-letter designation
        of the type of measurement made, and ### is a 3-numeral
        designation of the instrument command macro that was executed to
        acquire the data. Macro numbers are in the range 0-255. For
        EDRs, BI is measurement of detector bias, DF is a measurement of
        background including dark current and thermal background, LP is
        measurement of a focal plane lamp, SP is measurement of the
        internal integrating sphere, and SC is measurement of an
        external scene. TP indicates that the EDR contains any test
        pattern produced by instrument electronics. T1 through T7
        specify the test pattern, test pattern 1 through test pattern 7.
        UN indicates that the EDR contains data in which housekeeping
        does not match the commanded instrument configuration. For an
        RDR, RA indicates that the file contains values in units of
        radiance (W m^-2 nm^-1 sr^-1). IF indicates that the file
        contains values in units of I/F, or radiance divided by solar
        flux scaled for heliocentric distance. AL indicates that the
        file contains values as estimated Labert albedo, which is I/F
        corrected for cosine of incidence angle and for atmospheric and
        thermal effects. SU indicates that the files contains summary
        parameters, unitless values derived from Lambert albedo. For an
        RDR or a DDR, DE indicates that the files contains derived
        values related to observation geometry or independently
        characterized properties of the scene. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="array_first_value">
    <xs:annotation>
      <xs:documentation>The array_first_value element provides the first
        value in an ascending series and is therefore the minimum value
        at which a given data item was sampled. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="array_interval">
    <xs:annotation>
      <xs:documentation>The array_interval attribute provides the
        spacing of points at which data are sampled and at which values
        for an instrument or other parameter are available. If x1 and xn
        are the first and last sampling parameter values, respectively,
        xn is larger than x1, n is the number of sampling parameters,
        the caret symbol (^) denotes exponentiation, and b, a positive
        real number, is the base for exponentiation, then the value of
        sampling_parameter_interval is: (xn-x1)/(n-1) (for
        sampling_parameter_scale = Linear), (xn/x1)^(1/(n-1)) (for
        sampling_parameter_scale = Logarithmic), (b^xn-b^x1)/(n-1) (for
        sampling_parameter_scale = Exponential). </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="array_last_value">
    <xs:annotation>
      <xs:documentation>The array_last_value element provides the last
        value in an ascending series and is therefore the maximum value
        at which a given data item was sampled. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="array_scale">
    <xs:annotation>
      <xs:documentation>The array_scale attribute specifies whether the
        sampling interval is linear or something other such as
        logarithmic. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="array_unit">
    <xs:annotation>
      <xs:documentation>The array_unit element specifies the unit of
        measure of associated data sampling parameters.
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="band_name">
    <xs:annotation>
      <xs:documentation>Identifies the name of the CRISM band associated
        with the specific scaling and offset parameters used in a CRISM
        browse product. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="band_sequence_number">
    <xs:annotation>
      <xs:documentation>Defines the order of the CRISM bands along the
        Axis_Array when axis_name is band. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Integer">
     <xs:minInclusive value="1"/>
     <xs:maxInclusive value="9223372036854775807"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="detector_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="detector_temperature">
    <xs:annotation>
      <xs:documentation> The detector_temperature attribute provides the
        temperature of the CRISM IR detector (if sensor_id = 'L'), or
        the VNIR detector (if SENSOR_ID = 'S'). On each detector there
        are two temperature sensors. The primary source of IR detector
        temperature is IR temperature sensor 1 (column 50 in the EDR
        list file). The backup source of IR detector temperature is IR
        temperature sensor 2 (column 51 in the EDR list file). The
        primary source of VNIR detector temperature is VNIR temperature
        sensor 2 (column 65 in the EDR list file). The backup source of
        VNIR detector temperature is VNIR temperature sensor 1 (column
        64 in the EDR list file). </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="mro:detector_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="fpe_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="fpe_temperature">
    <xs:annotation>
      <xs:documentation> The fpe_temperature attribute provides the
        temperature of the HiRISE or CRISM instrument's Focal Plane
        Electronics in degrees Celsius. For HiRISE, see Figure 2.3, MRO
        HiRISE EDR SIS, REFKEYID JPLD-32004. For CRISM, the value refers
        to the focal plane electronics board mounted in the base of the
        gimbal. The values represents IR focal plane electronics if
        SENSOR_ID = 'L', and to the VNIR focal plane electronics if
        SENSOR_ID = 'S'. The source of CRISM IR focal plane electronics
        temperature is column 60 in the EDR list file. The source of
        VNIR focal plane electronics temperature is column 71 in the EDR
        list file. </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="mro:fpe_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="mission_phase_name">
    <xs:annotation>
      <xs:documentation> The mission_phase_name attribute provides the
        mission-defined name of a time period within the mission.
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="name">
    <xs:annotation>
      <xs:documentation>The name element provides the name of the
        parameter which determines the sampling interval of a particular
        instrument or dataset parameter. For example, magnetic field
        intensity is sampled in time increments, and a spectrum is
        sampled in wavelength or frequency. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="observation_id">
    <xs:annotation>
      <xs:documentation> The observation_id attribute is a 8-byte
        hexadecimal integer uniquely identifying the observation.
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="observation_number">
    <xs:annotation>
      <xs:documentation> The observation_number attribute gives the
        monotonically increasing ordinal counter of the EDRs generated
        for a particular CRISM observation_id. CRISM generates several
        EDRs for a given observation_id. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="observation_type">
    <xs:annotation>
      <xs:documentation> The observation_type attribute identifies the
        general type of observation. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="optical_bench_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="optical_bench_temperature">
    <xs:annotation>
      <xs:documentation> The optical_bench_temperature attribute
        provides the temperature of the CRISM optical bench. It is a
        backup to sphere_temperature for modeling the output radiance of
        the onboard integrating sphere as a function of sphere
        temperature. </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="mro:optical_bench_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="orbit_number">
    <xs:annotation>
      <xs:documentation> The orbit_number attribute identifies the orbit
        number when the observation was taken. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_NonNegative_Integer">
    	<xs:pattern value='[0-9]+'/>
     <xs:minInclusive value="0"/>
     <xs:maxInclusive value="18446744073709551615"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="producer_institution_name">
    <xs:annotation>
      <xs:documentation> The producer_institution_name attribute
        identifies the name of the institution that created the data
        product. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="product_type">
    <xs:annotation>
      <xs:documentation> The product_type attribute identifies the type
        of data product. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="product_version_id">
    <xs:annotation>
      <xs:documentation> The product_version_id element identifies the
        version of an individual data product. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="release_id">
    <xs:annotation>
      <xs:documentation>release_id is the identifier of a scheduled
        release of MRO data from PDS. The first MRO data release has
        release_number "0001". The release_number for a given product is
        always the first release in which it appears, and does not
        change if the product is revised later.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="scaling_factor">
    <xs:annotation>
      <xs:documentation>The scaling_factor attribute is the scaling
        factor to be applied to each stored value in order to recover an
        original value. The observed value (Ov) is calculated from the
        stored value (Sv) thus: Ov = (Sv * scaling_factor) +
        value_offset. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sensor_id">
    <xs:annotation>
      <xs:documentation> The sensor_id attribute identifies the CRISM
        focal plane from which data in an EDR or RDR were returned; S =
        short-wavelength or VNIR, L = long-wavelength or IR, J = joint
        where a data product is applicable to either. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="spacecraft_clock_count_partition">
    <xs:annotation>
      <xs:documentation> The spacecraft_clock_count_partition attribute
        indicates the clock partition active for the
        spacecraft_clock_start_count and spacecraft_clock_stop_count
        attributes. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_NonNegative_Integer">
    	<xs:pattern value='[0-9]+'/>
     <xs:minInclusive value="0"/>
     <xs:maxInclusive value="18446744073709551615"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="spacecraft_clock_start_count">
    <xs:annotation>
      <xs:documentation>The spacecraft_clock_start_count attribute
        provides the value of the spacecraft clock at the beginning of a
        time period of interest. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
    	<xs:pattern value='([0-9]{1,2}/)?[0-9]{1,10}(:[0-9]{3,6})?'/>
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="spacecraft_clock_stop_count">
    <xs:annotation>
      <xs:documentation>The spacecraft_clock_stop_count attribute
        provides the value of the spacecraft clock at the end of a time
        period of interest. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Short_String_Collapsed">
    	<xs:pattern value='([0-9]{1,2}/)?[0-9]{1,10}(:[0-9]{3,6})?'/>
     <xs:minLength value="1"/>
     <xs:maxLength value="255"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="spectrometer_housing_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="spectrometer_housing_temperature">
    <xs:annotation>
      <xs:documentation> The spectrometer_housing_temperature attribute
        gives the temperature of the CRISM spectrometer housing. This is
        a backup to direct determination, using measurements with the
        shutter closed, of the thermal background measured by the IR
        detector. The primary source of this temperature is a
        measurement digitized by the VNIR focal plane electronics,
        column 58 in the EDR list file. The backup source of this
        temperature is a measurement digitized by the IR focal plane
        electronics, column 69 in the EDR list file. </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="mro:spectrometer_housing_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="sphere_temperature_WO_Units">
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="sphere_temperature">
    <xs:annotation>
      <xs:documentation> The sphere_temperature attribute gives the
        temperature of the CRISM onboard integrating sphere. It is used
        for modeling the output radiance of the sphere as a function of
        sphere temperature. </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="mro:sphere_temperature_WO_Units">
        <xs:attribute name="unit" type="pds:Units_of_Temperature" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="value_offset">
    <xs:annotation>
      <xs:documentation>The value_offset attribute is the offset to be
        applied to each stored value in order to recover an original
        value. The observed value (Ov) is calculated from the stored
        value (Sv) thus: Ov = (Sv * scaling_factor) + value_offset.
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="pds:ASCII_Real">
     <xs:minInclusive value="-1.7976931348623157e308"/>
     <xs:maxInclusive value="1.7976931348623157e308"/>
	   </xs:restriction>
  </xs:simpleType>
</xs:schema>
